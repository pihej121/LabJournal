---
title: "Journal"
output:
  html_document:
    toc: true
    toc_float: true
    collapsed: false
    number_sections: false
    toc_depth: 1
    #code_folding: hide
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(message=FALSE,warning=FALSE, cache=TRUE)
```

IMPORTANT: You can delete everything in here and start fresh. You might want to start by not deleting anything above this line until you know what that stuff is doing.


# Patrick's Journal 
Made to keep a record of my practice with coding by displaying my practice code questions, answers and future pieces of code



# Problem 1

Do simple math with numbers, addition, subtraction, multiplication, division

```{r}
1+2
2*5
5/3
(1+6+4)/5

```

# Problem 2

Put numbers into variables, do simple math on the variables

```{r}
a<-1
b<-2
a+b

d<-c(1,2,3)
e<-c(5,6,7)
d+e
d*e
d/e

```

# Problem 3

Write code that will place the numbers 1 to 100 separately into a variable using for loop. Then, again using the seq function.

```{r}
# for loop solution
# i becomes the number 1 to 100 at each step of the loop


a <- length(100) # make empty variable, set length to 100
for (i in 1:100){
  a[i] <-i #assigns the number in i, to the ith index of a
}

print(a)

# for loop solution #2

a<-c() #create empty variable using combine command
for (i in 1:100){
  a<-c(a,i) # keeps combining a with itself and the new number in i
}
print(a)

# seq solution
a <- seq(1,100,1) # look up help for seq using ?seq() in console
print(a)

```

# Problem 4

Find the sum of all the integer numbers from 1 to 100.

```{r}
sum(1:100)
```

# Problem 5

Write a function to find the sum of all integers between any two values.

```{r}
mySum<- function (x) {
  totalSum<-0
  for (i in x){
    totalSum<-totalSum+i
  }
  return(totalSum)
}
test<-c(1:20)
mySum(test)
```

# Problem 6

List all of the odd numbers from 1 to 100. with and without seq function
  With seq:

```{r}
seq(1,by=2, len=100)
```

  Without Seq:
```{r}

for (i in 1:100) {
  if (i %% 2 ==1) print(i)
}

```
  
# Problem 7

List all of the prime numbers from 1 to 1000.
```{r}

prime_numbers <- function(n) {
if (n >= 2) {
 x = seq(2, n)
 prime_nums = c()
 for (i in seq(2, n)) {
 if (any(x == i)) {
 prime_nums = c(prime_nums, i)
 x = c(x[(x %% i) != 0], i)
 }
 }
 return(prime_nums)
 }
 else 
 {
 stop("Input number should be at least 2.")
 }
 } 
prime_numbers(100)

```
# Problem 8

Generate 100 Random Numbers

```{r}
runif(100)
```
# Problem 9
Generate 100 random numbers within a specific rang
```{r}
runif(100, min = 0, max = 1000)
```
# Problem 10
Write your own functions to give descriptive statistics for a vector variable storing multiple numbers. Write functions for the following without using R intrinsic: mean, mode, median, range, standard deviation
  
  Mean:
```{r}
mean_A <- function(x){
  return(sum(x)/length(x))
}

some_numbers <- c(1:100)
mean_A(some_numbers)
```
  Median:
```{r}
median (1:101)
```
  Mode:
```{r}
getmode <- function(v) {
   uniqv <- unique(v)
   uniqv[which.max(tabulate(match(v, uniqv)))]
}

v <- c(2,1,2,3,1,2,3,4,1,5,5,3,2,3,3,3,3,3)

result <- getmode(v)
print(result)
```
  Range:
```{r}
v <- c(112,132,143,214,115,263,73,81,329,12,13,113,321,2214,223,433,4325,4215)
{max(v)-min(v)}
```
# Problem 11
Count the number of characters in a string variable

```{r}
a <- c("adskfjhkadsjfh")
strsplit(a,split="")
```
# Problem 12
Count the number of words in a string variable
```{r}
a <- "this is a sentence"
strsplit(a,split=" ")
```
# Problem 13
Count the number of sentences in a string variable
```{r}
a <- "this is a sentence. i dont know if its good. if its bad too bad."
strsplit(a,split=" ")
```
# Problem 14
Count the number of times a specific character occurs in a string variable
```{r}
a <- c(1,3,2,3,2,3,2,3,4,5,4,3,4,3,4,5,6,7)
table(a)
sum(a)
```
# Problem 15
Do a logical test to see if one word is found within the text of another string variable.
```{r}
a<- c(4,3,1,5,6,2,7,6,8,9,11,12,14,24,54)
b<- 4
c<- 10

c%in%a
b%in%a
```
# Problem 16
Put the current computer time in milliseconds into a variable
```{r}
print(as.numeric(Sys.time())*1, digits=3)
```
# Patrick Custom Question
Create a random histogram for a set of numbers
```{r}
samples <- rnorm(100, mean=0, sd=1)
hist(samples)
```






